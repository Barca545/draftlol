{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jamari\\\\Documents\\\\Hobbies\\\\Coding\\\\draftlol\\\\client\\\\src\\\\Components\\\\CountdownTimer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { isTimer } from '../App/Types/champ-select-types';\nimport '../Pages/draft-styles.css';\nimport { useWebSocket } from 'react-use-websocket/dist/lib/use-websocket';\nimport { BASE_URL } from '../App/Slices/baseurl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CountdownTimer = () => {\n  _s();\n  const [time, setTime] = useState(null);\n  const {\n    sendMessage\n  } = useWebSocket(BASE_URL, {\n    onOpen: () => console.log('connection opened'),\n    onClose: () => console.log('connection closed'),\n    onMessage: message => {\n      let time = JSON.parse(message.data).requestBody;\n      console.log(message);\n      console.log(time);\n      /*might need if statement so this only runs if the timer differs from the requestBody.\r\n      Alternatively make it so timer only sends a restart message back and forth.\r\n      keep the actual timer entirely frontend*/\n      if (isTimer(time)) {\n        setTime(time);\n      }\n    },\n    share: true,\n    ///maybe share should be false\n    retryOnError: true,\n    shouldReconnect: () => true\n  });\n  const handleReset = () => {\n    setTime({\n      minutes: 0,\n      seconds: 0\n    });\n    sendMessage(JSON.stringify({\n      type: 'Timer',\n      RequestBody: {\n        minutes: 0,\n        seconds: 0\n      }\n    }));\n  };\n  const tick = () => {\n    if (time != null) {\n      if (time.minutes === 0 && time.seconds === 0) {\n        setTime({\n          minutes: 0,\n          seconds: 0\n        });\n      } else if (time.seconds === 0) {\n        setTime({\n          minutes: time.minutes - 1,\n          seconds: 59\n        });\n      } else {\n        setTime({\n          minutes: time.minutes,\n          seconds: time.seconds - 1\n        });\n      }\n    }\n  };\n\n  ///this news effect needs to reset if the target changes I believe putting it in the dependency array does this\n  ///connect thing to handleConfirm to reset the timer\n  useEffect(() => {\n    if ((time === null || time === void 0 ? void 0 : time.minutes) != undefined) {\n      handleReset();\n    } else {\n      const timerId = setInterval(() => tick(), 1000);\n      return () => clearInterval(timerId);\n    }\n  }, [time]);\n  if ((time === null || time === void 0 ? void 0 : time.minutes) != undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${time.minutes.toString().padStart(2, '0')}:${time.seconds.toString().padStart(2, '0')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n_s(CountdownTimer, \"KjVzS3SFrFb2syniYJeYFO+7Jjg=\", false, function () {\n  return [useWebSocket];\n});\n_c = CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["useEffect","useState","isTimer","useWebSocket","BASE_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","CountdownTimer","_s","time","setTime","sendMessage","onOpen","console","log","onClose","onMessage","message","JSON","parse","data","requestBody","share","retryOnError","shouldReconnect","handleReset","minutes","seconds","stringify","type","RequestBody","tick","undefined","timerId","setInterval","clearInterval","className","children","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jamari/Documents/Hobbies/Coding/draftlol/client/src/Components/CountdownTimer.tsx"],"sourcesContent":["import {useEffect,useState} from 'react'\r\nimport { Timer, DraftList, DraftRequest, isTimer} from '../App/Types/champ-select-types'\r\nimport '../Pages/draft-styles.css'\r\nimport { useWebSocket } from 'react-use-websocket/dist/lib/use-websocket'\r\nimport { BASE_URL } from '../App/Slices/baseurl'\r\n\r\nexport const CountdownTimer = () => { \r\n  const [time, setTime] = useState<Timer|null>(null)\r\n  \r\n  const {sendMessage} = useWebSocket(BASE_URL, {\r\n    onOpen: () => console.log('connection opened'),\r\n    onClose: () => console.log('connection closed'),\r\n    onMessage: (message:WebSocketEventMap['message']) => {\r\n      let time:Timer = JSON.parse(message.data).requestBody\r\n      console.log(message)\r\n      console.log(time)\r\n      /*might need if statement so this only runs if the timer differs from the requestBody.\r\n      Alternatively make it so timer only sends a restart message back and forth.\r\n      keep the actual timer entirely frontend*/\r\n      if(isTimer(time)){\r\n        setTime(time)\r\n      }\r\n    },\r\n\r\n    share:true, ///maybe share should be false\r\n    retryOnError: true,\r\n    shouldReconnect: () => true\r\n  })\r\n  \r\n  const handleReset = () => {\r\n    setTime({minutes: 0, seconds: 0})\r\n    sendMessage(JSON.stringify({\r\n      type: 'Timer',\r\n      RequestBody: {minutes: 0, seconds: 0}\r\n    }))\r\n  }\r\n  \r\n  const tick = () => {\r\n    if (time!=null){\r\n      if (time.minutes === 0 && time.seconds === 0) {\r\n        setTime({minutes: 0, seconds: 0})\r\n      }\r\n      else if (time.seconds===0) {\r\n        setTime({minutes: time.minutes-1, seconds: 59})\r\n      }\r\n      else {\r\n        setTime({minutes: time.minutes, seconds: time.seconds-1})\r\n      }\r\n    }  \r\n\r\n  }\r\n\r\n  ///this news effect needs to reset if the target changes I believe putting it in the dependency array does this\r\n  ///connect thing to handleConfirm to reset the timer\r\n  useEffect(() => {\r\n    if(time?.minutes!=undefined){\r\n      handleReset()\r\n    }\r\n    else{ \r\n      const timerId = setInterval(() => tick(), 1000);\r\n      return () => clearInterval(timerId)\r\n    }\r\n  },[time])\r\n  \r\n  if(time?.minutes!=undefined){\r\n    return (\r\n      <div className='timer'>\r\n        <p>{`${time.minutes.toString().padStart(2, '0')}:${time.seconds.toString().padStart(2, '0')}`}</p> \r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n  \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}