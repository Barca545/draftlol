{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useWebSocket } from 'react-use-websocket/dist/lib/use-websocket';\nimport { BASE_URL, MATCH_ID } from '../App/Slices/baseurl';\nexport const ChampSelect = () => {\n  _s();\n  const [draft, setDraft] = useState();\n  const {\n    sendMessage,\n    readyState\n  } = useWebSocket(`${BASE_URL}/${MATCH_ID}/draft/blueside`, {\n    onOpen: () => console.log('connection opened'),\n    onClose: () => console.log('connection closed'),\n    onMessage: message => {\n      let data = JSON.parse(message.data);\n      setDraft(data);\n      console.log(draft);\n    },\n    share: false,\n    ///maybe share should be false\n    retryOnError: true,\n    shouldReconnect: () => true\n  });\n  if (draft === null) {}\n};\n_s(ChampSelect, \"xgRQbvkAV5H4LYX5aq1ycX8MwDI=\", false, function () {\n  return [useWebSocket];\n});\n_c = ChampSelect;\nvar _c;\n$RefreshReg$(_c, \"ChampSelect\");","map":{"version":3,"names":["useState","useWebSocket","BASE_URL","MATCH_ID","ChampSelect","_s","draft","setDraft","sendMessage","readyState","onOpen","console","log","onClose","onMessage","message","data","JSON","parse","share","retryOnError","shouldReconnect","_c","$RefreshReg$"],"sources":["C:/Users/Jamari/Documents/Hobbies/Coding/draftlol/client/src/Components/ChampSelect.tsx"],"sourcesContent":["import {useEffect, useState } from 'react'\r\nimport { useWebSocket } from 'react-use-websocket/dist/lib/use-websocket'\r\nimport { BASE_URL,MATCH_ID } from '../App/Slices/baseurl'\r\nimport { DraftList } from '../App/Types/champ-select-types'\r\n\r\nexport const ChampSelect = () => {\r\n  const [draft,setDraft] = useState<DraftList|null>()\r\n\r\n  const {sendMessage,readyState} = useWebSocket(`${BASE_URL}/${MATCH_ID}/draft/blueside`, {\r\n    onOpen: () => console.log('connection opened'),\r\n    onClose: () => console.log('connection closed'),\r\n    onMessage: (message:WebSocketEventMap['message']) => {\r\n      let data:DraftList = JSON.parse(message.data)\r\n      setDraft(data)\r\n      console.log(draft)\r\n    },\r\n    share:false, ///maybe share should be false\r\n    retryOnError: true,\r\n    shouldReconnect: () => true\r\n    })\r\n\r\n  if (draft===null)  {}\r\n}"],"mappings":";AAAA,SAAmBA,QAAQ,QAAQ,OAAO;AAC1C,SAASC,YAAY,QAAQ,4CAA4C;AACzE,SAASC,QAAQ,EAACC,QAAQ,QAAQ,uBAAuB;AAGzD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAiB,CAAC;EAEnD,MAAM;IAACQ,WAAW;IAACC;EAAU,CAAC,GAAGR,YAAY,CAAE,GAAEC,QAAS,IAAGC,QAAS,iBAAgB,EAAE;IACtFO,MAAM,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAC9CC,OAAO,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAC/CE,SAAS,EAAGC,OAAoC,IAAK;MACnD,IAAIC,IAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACC,IAAI,CAAC;MAC7CT,QAAQ,CAACS,IAAI,CAAC;MACdL,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IACpB,CAAC;IACDa,KAAK,EAAC,KAAK;IAAE;IACbC,YAAY,EAAE,IAAI;IAClBC,eAAe,EAAEA,CAAA,KAAM;EACvB,CAAC,CAAC;EAEJ,IAAIf,KAAK,KAAG,IAAI,EAAG,CAAC;AACtB,CAAC;AAAAD,EAAA,CAjBYD,WAAW;EAAA,QAGWH,YAAY;AAAA;AAAAqB,EAAA,GAHlClB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}