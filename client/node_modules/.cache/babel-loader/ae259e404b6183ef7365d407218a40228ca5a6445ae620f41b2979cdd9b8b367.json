{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jamari\\\\Documents\\\\Hobbies\\\\Coding\\\\draftlol\\\\client\\\\src\\\\Components\\\\CountdownTimer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { isTimer } from '../App/Types/champ-select-types';\nimport '../Pages/draft-styles.css';\nimport { useWebSocket } from 'react-use-websocket/dist/lib/use-websocket';\nimport { BASE_URL } from '../App/Slices/baseurl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountdownTimer = () => {\n  _s();\n  const [time, setTime] = useState({\n    minutes,\n    seconds\n  });\n  const {\n    sendMessage\n  } = useWebSocket(BASE_URL, {\n    onOpen: () => console.log('connection opened'),\n    onClose: () => console.log('connection closed'),\n    onMessage: message => {\n      let data = JSON.parse(message.data);\n      /*might need if statement so this only runs if the timer differs from the requestBody.\r\n      Alternatively make it so timer only sends a restart message back and forth.\r\n      keep the actual timer entirely frontend*/\n      if (isTimer(data.requestBody)) {\n        setTime(data.requestBody);\n      }\n    },\n    share: true,\n    ///maybe share should be false\n    retryOnError: true,\n    shouldReconnect: () => true\n  });\n  const handleReset = () => {\n    setTime({\n      minutes: 0,\n      seconds: 0\n    });\n    sendMessage(JSON.stringify({\n      type: 'Timer',\n      RequestBody: {\n        minutes: 0,\n        seconds: 0\n      }\n    }));\n  };\n  const tick = () => {\n    if (time.minutes === 0 && time.seconds === 0) {\n      setTime({\n        minutes: 0,\n        seconds: 0\n      });\n    } else if (time.seconds === 0) {\n      setTime({\n        minutes: time.minutes - 1,\n        seconds: 59\n      });\n    } else {\n      setTime({\n        minutes: time.minutes,\n        seconds: time.seconds - 1\n      });\n    }\n  };\n\n  ///this news effect needs to reset if the target changes I believe putting it in the dependency array does this\n  ///connect thing to handleConfirm to reset the timer\n  useEffect(() => {\n    if (time.minutes === 0 && time.seconds === 0) {\n      handleReset();\n    } else {\n      const timerId = setInterval(() => tick(), 1000);\n      return () => clearInterval(timerId);\n    }\n  }, [time.seconds, time.minutes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `${time.minutes.toString().padStart(2, '0')}:${time.seconds.toString().padStart(2, '0')}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"xmEMfNadDjsxZcgnFBEIAC9LlbQ=\", false, function () {\n  return [useWebSocket];\n});\n_c = CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["useEffect","useState","isTimer","useWebSocket","BASE_URL","jsxDEV","_jsxDEV","CountdownTimer","_s","time","setTime","minutes","seconds","sendMessage","onOpen","console","log","onClose","onMessage","message","data","JSON","parse","requestBody","share","retryOnError","shouldReconnect","handleReset","stringify","type","RequestBody","tick","timerId","setInterval","clearInterval","className","children","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jamari/Documents/Hobbies/Coding/draftlol/client/src/Components/CountdownTimer.tsx"],"sourcesContent":["import {useEffect,useState} from 'react'\r\nimport { Timer, DraftList, DraftRequest, isTimer} from '../App/Types/champ-select-types'\r\nimport '../Pages/draft-styles.css'\r\nimport { useWebSocket } from 'react-use-websocket/dist/lib/use-websocket'\r\nimport { BASE_URL } from '../App/Slices/baseurl'\r\n\r\nexport const CountdownTimer = () => { \r\n  const [time, setTime] = useState<Timer>({minutes,seconds})\r\n  \r\n  const {sendMessage} = useWebSocket(BASE_URL, {\r\n    onOpen: () => console.log('connection opened'),\r\n    onClose: () => console.log('connection closed'),\r\n    onMessage: (message:WebSocketEventMap['message']) => {\r\n      let data:DraftRequest = JSON.parse(message.data)\r\n      /*might need if statement so this only runs if the timer differs from the requestBody.\r\n      Alternatively make it so timer only sends a restart message back and forth.\r\n      keep the actual timer entirely frontend*/\r\n      if(isTimer(data.requestBody)){\r\n        setTime(data.requestBody)\r\n      }\r\n    },\r\n\r\n    share:true, ///maybe share should be false\r\n    retryOnError: true,\r\n    shouldReconnect: () => true\r\n  })\r\n  \r\n  const handleReset = () => {\r\n    setTime({minutes: 0, seconds: 0})\r\n    sendMessage(JSON.stringify({\r\n      type: 'Timer',\r\n      RequestBody: {minutes: 0, seconds: 0}\r\n    }))\r\n  }\r\n  \r\n  const tick = () => {\r\n    if (time.minutes === 0 && time.seconds === 0) {\r\n      setTime({minutes: 0, seconds: 0})\r\n    }\r\n    else if (time.seconds===0) {\r\n      setTime({minutes: time.minutes-1, seconds: 59})\r\n    }\r\n    else {\r\n      setTime({minutes: time.minutes, seconds: time.seconds-1})\r\n    }\r\n  }\r\n\r\n  ///this news effect needs to reset if the target changes I believe putting it in the dependency array does this\r\n  ///connect thing to handleConfirm to reset the timer\r\n  useEffect(() => {\r\n    if(time.minutes===0 && time.seconds===0){\r\n      handleReset()\r\n    }\r\n    else{ \r\n      const timerId = setInterval(() => tick(), 1000);\r\n      return () => clearInterval(timerId)\r\n    }\r\n  },[time.seconds,time.minutes])\r\n  \r\n  return (\r\n    <div className='timer'>\r\n      <p>{`${time.minutes.toString().padStart(2, '0')}:${time.seconds.toString().padStart(2, '0')}`}</p> \r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,SAAQA,SAAS,EAACC,QAAQ,QAAO,OAAO;AACxC,SAAyCC,OAAO,QAAO,iCAAiC;AACxF,OAAO,2BAA2B;AAClC,SAASC,YAAY,QAAQ,4CAA4C;AACzE,SAASC,QAAQ,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAQ;IAACU,OAAO;IAACC;EAAO,CAAC,CAAC;EAE1D,MAAM;IAACC;EAAW,CAAC,GAAGV,YAAY,CAACC,QAAQ,EAAE;IAC3CU,MAAM,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAC9CC,OAAO,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAC/CE,SAAS,EAAGC,OAAoC,IAAK;MACnD,IAAIC,IAAiB,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACC,IAAI,CAAC;MAChD;AACN;AACA;MACM,IAAGlB,OAAO,CAACkB,IAAI,CAACG,WAAW,CAAC,EAAC;QAC3Bb,OAAO,CAACU,IAAI,CAACG,WAAW,CAAC;MAC3B;IACF,CAAC;IAEDC,KAAK,EAAC,IAAI;IAAE;IACZC,YAAY,EAAE,IAAI;IAClBC,eAAe,EAAEA,CAAA,KAAM;EACzB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBjB,OAAO,CAAC;MAACC,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAC,CAAC,CAAC;IACjCC,WAAW,CAACQ,IAAI,CAACO,SAAS,CAAC;MACzBC,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE;QAACnB,OAAO,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAC;IACtC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMmB,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAItB,IAAI,CAACE,OAAO,KAAK,CAAC,IAAIF,IAAI,CAACG,OAAO,KAAK,CAAC,EAAE;MAC5CF,OAAO,CAAC;QAACC,OAAO,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAC,CAAC,CAAC;IACnC,CAAC,MACI,IAAIH,IAAI,CAACG,OAAO,KAAG,CAAC,EAAE;MACzBF,OAAO,CAAC;QAACC,OAAO,EAAEF,IAAI,CAACE,OAAO,GAAC,CAAC;QAAEC,OAAO,EAAE;MAAE,CAAC,CAAC;IACjD,CAAC,MACI;MACHF,OAAO,CAAC;QAACC,OAAO,EAAEF,IAAI,CAACE,OAAO;QAAEC,OAAO,EAAEH,IAAI,CAACG,OAAO,GAAC;MAAC,CAAC,CAAC;IAC3D;EACF,CAAC;;EAED;EACA;EACAZ,SAAS,CAAC,MAAM;IACd,IAAGS,IAAI,CAACE,OAAO,KAAG,CAAC,IAAIF,IAAI,CAACG,OAAO,KAAG,CAAC,EAAC;MACtCe,WAAW,CAAC,CAAC;IACf,CAAC,MACG;MACF,MAAMK,OAAO,GAAGC,WAAW,CAAC,MAAMF,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;MAC/C,OAAO,MAAMG,aAAa,CAACF,OAAO,CAAC;IACrC;EACF,CAAC,EAAC,CAACvB,IAAI,CAACG,OAAO,EAACH,IAAI,CAACE,OAAO,CAAC,CAAC;EAE9B,oBACEL,OAAA;IAAK6B,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpB9B,OAAA;MAAA8B,QAAA,EAAK,GAAE3B,IAAI,CAACE,OAAO,CAAC0B,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAG7B,IAAI,CAACG,OAAO,CAACyB,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AAEV,CAAC;AAAAlC,EAAA,CA1DYD,cAAc;EAAA,QAGHJ,YAAY;AAAA;AAAAwC,EAAA,GAHvBpC,cAAc;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}